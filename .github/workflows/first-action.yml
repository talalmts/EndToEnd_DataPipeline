name: First Workflow
on: 
  workflow_dispatch:
  push:
    branches: 
      - main
      - 'dev/**'
      - 'feature/**'
    paths-ignore:
      - '.github/workflow/*'
  pull_request:
    types:
      - opened
      - closed
env:
  DUCKDB_DB_NAME: db_duckdb

jobs:
  first-job:
    runs-on: ubuntu-latest
    environment: testing
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    env:
      DUCKDB_CLUSTER_ADDR: cluster0.123231.mongodb.net
      DUCKDB_USERNAME: ${{ secrets.DUCKDB_USERNAME }}
      DUCKDB_PASSWD: ${{ secrets.DUCKDB_PASSWD}}
    steps:
      - name: Print Greeting
        run: |
            echo "Hello World"
            echo "Hello World 2nd time"
      - name: Print Goodbye
        run: echo "Goodbye!"
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' 
      - name: Cache pip dir
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
              ${{ runner.os }}-pip-
      - name: Install dependencies
        run: | 
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Publish csv filename
        id: publish
        run: find data/steps.csv -type f -execdir echo 'script-file={}' >> '$GITHUB_OUTPUT' ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-e2e
          path: |
            requirements.txt
            data/steps.csv
      - name: see environment vars
        run: |
          python env_tmp.py
          echo "DUCKDB_USERNAME: $DUCKDB_USERNAME"
          echo "DUCKDB_DB_NAME: ${{ env.DUCKDB_DB_NAME}}"

 
  deploy:
    runs-on: ubuntu-latest
    needs: first-job
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with: 
          name: artifacts-e2e
      - name: Cache pip dir
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: | 
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: List the content
        run: ls 
      - name: Output filename
        run: echo "${{ needs.first-job.outputs.script-file }}"
      - name: Running deploy job
        run: echo "Deploying"